import subprocess
import threading
import zlib, base64
import time
from crypt.reedsolo import RSCodec
from Queue import Queue
from protocol import assemble_package, disassemble_package
from transmitter import transmit_package


send_queue = Queue()
recv_queue = Queue()

def sign_tx(account_nr, key_index, netcode, tx):
    if not isinstance(account_nr, int):
        raise TypeError("Expected int, got %s" % (type(account_nr),))
    if not isinstance(key_index, int):
        raise TypeError("Expected int, got %s" % (type(key_index),))
    if not isinstance(netcode, str):
        raise TypeError("Expected int, got %s" % (type(netcode),))
    if not isinstance(tx, str):
        raise TypeError("Expected int, got %s" % (type(tx),))

    package = assemble_package(account_nr, key_index, netcode, tx)
    send_queue.put(package)
    transmit_package(package)

sign_tx(12,0,'XTN', '01000000015a06d623ff099d77dbba3cd6fd2eec42f250768c61d443584b53a827acaaad580100000000ffffffff0600000000000000002a6a284163636f7264696e6720746f2074686520456e6379636c6f7065646961204272697474616e69636100000000000000002a6a282c20746865204e617469766520416d65726963616e202671756f743b547261696c206f662054656100000000000000002a6a2872732671756f743b20686173206265656e207265646566696e656420617320616e7977686572652000000000000000001a6a187468617420436875636b204e6f727269732077616c6b732e10270000000000001976a914bd52402e41483cc632ced18ad798b1b8c59de7a688acd3dc0700000000001976a914aeb7b78c4e59a0613260b949b863e2a4dcdf3dc688ac00000000f32a0800000000001976a914aeb7b78c4e59a0613260b949b863e2a4dcdf3dc688ac')

'''
package = assemble_package(12, 0, "XTN", '01000000015a06d623ff099d77dbba3cd6fd2eec42f250768c61d443584b53a827acaaad580100000000ffffffff0600000000000000002a6a284163636f7264696e6720746f2074686520456e6379636c6f7065646961204272697474616e69636100000000000000002a6a282c20746865204e617469766520416d65726963616e202671756f743b547261696c206f662054656100000000000000002a6a2872732671756f743b20686173206265656e207265646566696e656420617320616e7977686572652000000000000000001a6a187468617420436875636b204e6f727269732077616c6b732e10270000000000001976a914bd52402e41483cc632ced18ad798b1b8c59de7a688acd3dc0700000000001976a914aeb7b78c4e59a0613260b949b863e2a4dcdf3dc688ac00000000f32a0800000000001976a914aeb7b78c4e59a0613260b949b863e2a4dcdf3dc688ac')

sender = Transmitter(compress=use_compression, baudmode=baud)
sender.write(package)

sender.close()
time.sleep(10)
'''